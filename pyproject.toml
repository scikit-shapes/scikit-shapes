[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "skshapes"
version = "0.2"
description = "Shape analysis in python"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">= 3.10"
dependencies = [
    "torch",
    "torchdiffeq",
    "numpy",
    "pykeops",
    "geomloss",
    "jaxtyping",
    "beartype==0.17.2",
    "pyvista",
    "vedo",
    "fast-simplification",
    "fast-edges-extraction",
]

# Optional dependencies: see https://github.com/scikit-shapes/scikit-shapes/pull/55
[project.optional-dependencies]
taichi = ["taichi"]
all = ["skshapes[taichi]"] # https://stackoverflow.com/questions/75490231/pip-pyproject-toml-can-optional-dependency-groups-require-other-optional-depend


[project.urls]
Documentation = "https://scikit-shapes.github.io/scikit-shapes/"
Repository = "https://github.com/scikit-shapes/scikit-shapes"

[tool.black]
line-length = 79

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "--showlocals",
    "--strict-markers",
    "--strict-config",
    "--cov=skshapes",
    "--cov-report=term-missing",
    "--cov-report=html"
    ]
xfail_strict = true

# Importing taichi leads to a locale.getdefaultlocale deprecation warning, we ignore it
# See https://stackoverflow.com/questions/58399870/pytest-suppress-deprecationwarning-from-specific-3rd-party-modules/69622325#69622325
# for dtails about filterwarnings configuration
filterwarnings = [
  "error",
  "ignore:'locale.getdefaultlocale' is deprecated*:DeprecationWarning"
]


log_cli_level = "info"
testpaths = [
  "tests",
  "optional_tests"
  ]

[tool.repo-review]
ignore = [
    "PC140", # MyPy
    "PC170", # PyGrep (because no rst files)
    "PC180", # Prettier
    "MY", # MyPy
    "RTD" # ReadTheDocs
    ]


# See: https://learn.scientific-python.org/development/guides/style/#PC190
[tool.ruff]
src = ["src"]

[tool.ruff.lint]
extend-select = [
  "B",        # flake8-bugbear
  "I",        # isort
  "ARG",      # flake8-unused-arguments
  "C4",       # flake8-comprehensions
  "EM",       # flake8-errmsg
  "ICN",      # flake8-import-conventions
  "G",        # flake8-logging-format
  "PGH",      # pygrep-hooks
  "PIE",      # flake8-pie
  "PL",       # pylint
  "PT",       # flake8-pytest-style
  "PTH",      # flake8-use-pathlib
  "RET",      # flake8-return
  "RUF",      # Ruff-specific
  "SIM",      # flake8-simplify
  "T20",      # flake8-print
  "UP",       # pyupgrade
  "YTT",      # flake8-2020
  "EXE",      # flake8-executable
  "NPY",      # NumPy specific rules
  "FURB",     # refurb
  "PYI",      # flake8-pyi
]
ignore = [
  "PLR09",    # Too many <...>
  "PLR2004",  # Magic value used in comparison
  "ISC001",   # Conflicts with formatter
  "PYI041",   # Use `float` instead of `int | float
  "RET505",   # Unnecessary `elif`/`else` after `return` statement
]

[tool.ruff.lint.per-file-ignores]
# For _init__.py files:
"**_init__.py**" = ["F401", "F403", "F405"]
"examples/**" = ["T201"]
# F401: imported but unused
# F403: unable to detect undefined names (import *)
# F405: may be undefined, or defined from star imports

# For examples gallery files:
"**examples/**" = ["RUF003", "E402"]
# RUF003: Ambiguous no-break spaces
# E402: module level import not at top of file

[tool.cibuildwheel]
build = ["cp310-manylinux*", "cp311-manylinux*"]

[tool.cibuildwheel.linux]
archs = ["x86_64"]
